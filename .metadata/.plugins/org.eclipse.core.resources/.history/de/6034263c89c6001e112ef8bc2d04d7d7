package com.example.demo.controllers;

import org.springframework.web.bind.annotation.RestController;

import com.example.demo.entities.Invoice;
import com.example.demo.services.InvoiceManager;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.PutMapping;



@RestController
public class InvoiceController {

	@Autowired
	private InvoiceManager i_manager;
	@GetMapping("/invoice/{id}") 
	public Optional<Invoice> getbillingbybookid(@PathVariable int id) {
		return i_manager.getbillingbybookid(id);
	}
	@PostMapping("/invoice")
	public void addInvoice(@RequestBody Invoice invoice)
	{
		i_manager.addInvoice(invoice);
	}
	@PutMapping("/invoice/{email}")
	public Invoice putMethodName(@PathVariable String email, @RequestBody Invoice invoice) {
				
		try {
            Invoice existingBilling = i_manager.updatebillbyEmialid(email); 
            System.out.println(existingBilling); 
            if (existingBilling != null) {
                // Update the desired fields in the existingBilling object
                existingBilling.setFuelStatus(updatedBilling.getFuelStatus());
                existingBilling.setBillAmount(updatedBilling.getBillAmount());
                existingBilling.setEndDate(updatedBilling.getEndDate());

                billingService.save(existingBilling);
                return ResponseEntity.ok("Billing information updated successfully.");
            } else {
                return ResponseEntity.notFound().build();
            }
        } catch (Exception e) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Error updating billing information.");
        }
	}
}
